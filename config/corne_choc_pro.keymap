/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <90>;
    tapping-term-ms = <220>;
};

/ {
    chosen { zmk,physical-layout = &default_layout; };
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        m_lt_up_a: m_lt_up_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(U)) &kp N0 &kp N1 &kp N0 &kp N4 &kp RET>;
            label = "M_LT_UP_A";
        };

        m_lt_low_a: m_lt_low_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(U)) &kp N0 &kp N1 &kp N0 &kp N5 &kp RET>;
            label = "M_LT_LOW_A";
        };

        m_lt_up_c: m_lt_up_c {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(U)) &kp N0 &kp N1 &kp N0 &kp C &kp RET>;
            label = "M_LT_UP_C";
        };

        m_lt_low_c: m_lt_low_c {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(U)) &kp N0 &kp N1 &kp N0 &kp D &kp RET>;
            label = "M_LT_LOW_C";
        };

        m_lt_up_e_nos: m_lt_up_e_nos {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(U)) &kp N0 &kp N1 &kp N1 &kp N8 &kp RET>;
            label = "M_LT_UP_E_NOS";
        };

        m_lt_low_e_nos: m_lt_low_e_nos {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(U)) &kp N0 &kp N1 &kp N1 &kp N9 &kp RET>;
            label = "M_LT_LOW_E_NOS";
        };

        m_lt_up_e_dot: m_lt_up_e_dot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(U)) &kp N0 &kp N1 &kp N1 &kp N6 &kp RET>;
            label = "M_LT_UP_E_DOT";
        };

        m_lt_low_e_dot: m_lt_low_e_dot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(U)) &kp N0 &kp N1 &kp N1 &kp N7 &kp RET>;
            label = "M_LT_LOW_E_DOT";
        };

        m_lt_up_i: m_lt_up_i {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(U)) &kp N0 &kp N1 &kp N2 &kp E &kp RET>;
            label = "M_LT_UP_I";
        };

        m_lt_low_i: m_lt_low_i {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(U)) &kp N0 &kp N1 &kp N2 &kp F &kp RET>;
            label = "M_LT_LOW_I";
        };

        m_lt_up_s: m_lt_up_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(U)) &kp N0 &kp N1 &kp N6 &kp N0 &kp RET>;
            label = "M_LT_UP_S";
        };

        m_lt_low_s: m_lt_low_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(U)) &kp N0 &kp N1 &kp N6 &kp N1 &kp RET>;
            label = "M_LT_LOW_S";
        };

        m_lt_up_u_nos: m_lt_up_u_nos {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(U)) &kp N0 &kp N1 &kp N7 &kp N2 &kp RET>;
            label = "M_LT_UP_U_NOS";
        };

        m_lt_low_u_nos: m_lt_low_u_nos {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(U)) &kp N0 &kp N1 &kp N7 &kp N3 &kp RET>;
            label = "M_LT_LOW_U_NOS";
        };

        m_lt_up_u_ilg: m_lt_up_u_ilg {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(U)) &kp N0 &kp N1 &kp N6 &kp A &kp RET>;
            label = "M_LT_UP_U_ILG";
        };

        m_lt_low_u_ilg: m_lt_low_u_ilg {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(U)) &kp N0 &kp N1 &kp N6 &kp LS(B) &kp RET>;
            label = "M_LT_LOW_U_ILG";
        };

        m_lt_up_z: m_lt_up_z {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(U)) &kp N0 &kp N1 &kp N7 &kp D &kp RET>;
            label = "M_LT_UP_Z";
        };

        m_lt_low_z: m_lt_low_z {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(U)) &kp N0 &kp N1 &kp N7 &kp E &kp RET>;
            label = "M_LT_LOW_Z";
        };
    };

    behaviors {
        lt_a: lt_a {
            compatible = "zmk,behavior-mod-morph";
            label = "LT_A";
            bindings = <&m_lt_low_a>, <&m_lt_up_a>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        lt_c: lt_c {
            compatible = "zmk,behavior-mod-morph";
            label = "LT_C";
            bindings = <&m_lt_low_c>, <&m_lt_up_c>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        lt_e_nos: lt_e_nos {
            compatible = "zmk,behavior-mod-morph";
            label = "LT_E_NOS";
            bindings = <&m_lt_low_e_nos>, <&m_lt_up_e_nos>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        lt_e_dot: lt_e_dot {
            compatible = "zmk,behavior-mod-morph";
            label = "LT_E_DOT";
            bindings = <&m_lt_low_e_dot>, <&m_lt_up_e_dot>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        lt_i: lt_i {
            compatible = "zmk,behavior-mod-morph";
            label = "LT_I";
            bindings = <&m_lt_low_i>, <&m_lt_up_i>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        lt_s: lt_s {
            compatible = "zmk,behavior-mod-morph";
            label = "LT_S";
            bindings = <&m_lt_low_s>, <&m_lt_up_s>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        lt_u_nos: lt_u_nos {
            compatible = "zmk,behavior-mod-morph";
            label = "LT_U_NOS";
            bindings = <&m_lt_low_u_nos>, <&m_lt_up_u_nos>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        lt_u_ilg: lt_u_ilg {
            compatible = "zmk,behavior-mod-morph";
            label = "LT_U_ILG";
            bindings = <&m_lt_low_u_ilg>, <&m_lt_up_u_ilg>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        lt_z: lt_z {
            compatible = "zmk,behavior-mod-morph";
            label = "LT_Z";
            bindings = <&m_lt_low_z>, <&m_lt_up_z>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        hold_lt_a: hold_lt_a {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_LT_A";
            bindings = <&lt_a>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        hold_lt_c: hold_lt_c {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_LT_C";
            bindings = <&lt_c>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        hold_lt_e_nos: hold_lt_e_nos {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_LT_E_NOS";
            bindings = <&lt_e_nos>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        hold_lt_e_dot: hold_lt_e_dot {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_LT_E_DOT";
            bindings = <&lt_e_dot>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        hold_lt_i: hold_lt_i {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_LT_I";
            bindings = <&lt_i>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        hold_lt_s: hold_lt_s {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_LT_S";
            bindings = <&lt_s>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        hold_lt_u_nos: hold_lt_u_nos {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_LT_U_NOS";
            bindings = <&lt_u_nos>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        hold_lt_u_ilg: hold_lt_u_ilg {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_LT_U_ILG";
            bindings = <&lt_u_ilg>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        hold_lt_z: hold_lt_z {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_LT_Z";
            bindings = <&lt_z>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Dvorak";
            bindings = <
&mt GRAVE TAB   &mt NUMBER_1 SQT  &mt NUMBER_2 COMMA  &mt NUMBER_3 PERIOD  &mt NUMBER_4 P      &mt NUMBER_5 Y  &trans  &trans  &mt NUMBER_6 F  &mt N7 G     &mt NUMBER_8 C  &mt NUMBER_9 R  &mt NUMBER_0 L  &mt NON_US_BACKSLASH EQUAL
&mt LSHIFT ESC  &hold_lt_a 0 A    &hold_lt_e_nos 0 O  &hold_lt_e_dot 0 E   &hold_lt_u_ilg 0 U  &hold_lt_i 0 I  &trans  &trans  &kp D           &kp H        &lt_c           &kp N           &hold_lt_s 0 S  &mt LEFT_BRACKET SLASH
&kp LCTRL       &kp SEMI          &kp Q               &kp J                &hold_lt_u_nos 0 K  &kp X                           &kp B           &kp M        &kp W           &kp V           &hold_lt_z 0 Z  &mt RIGHT_BRACKET MINUS
                                                      &kp LGUI             &lt 1 SPACE         &kp BACKSPACE                   &kp RET         &lt 2 SPACE  &kp RALT
            >;
        };

        Mouse {
            bindings = <
&mkp MCLK  &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &msc SCRL_LEFT   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &to 0
&mkp LCLK  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_RIGHT  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&mkp RCLK  &trans          &trans          &trans           &trans           &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                                           &trans           &trans           &trans                  &trans  &to 3   &trans
            >;

            label = "Mouse";
        };

        FN+BT {
            display-name = "FN+BT";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5    |  LCTRL | RCTRL |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | CTRL | BT1 | BT2 | BT3 | BT4 | BT5   |  LALT  | RALT  | LFT | DWN |  UP | RGT |     |      |
            // | SHFT | BTCR| RGB | RST | BOOT| Unlock|        |       |     |     |     |     |     |      |
            //                    | GUI |     | SPC   |        | ENT   |     | ALT |

            bindings = <
&kp TAB       &kp F1        &kp F2           &kp F3        &kp F4        &kp F5          &trans  &trans  &kp F6             &kp F7          &kp F8            &kp F9        &kp F10          &kp F11
&out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &kp C_VOLUME_UP    &kp LEFT_ARROW  &kp DOWN_ARROW    &kp UP_ARROW  &kp RIGHT_ARROW  &kp F12
&kp LSHFT     &bt BT_CLR    &rgb_ug RGB_TOG  &sys_reset    &bootloader   &studio_unlock                  &kp C_VOLUME_DOWN  &kp C_PREV      &kp C_PLAY_PAUSE  &kp C_NEXT    &trans           &kp PRINTSCREEN
                                             &trans        &trans        &trans                          &trans             &to 1           &trans
            >;
        };

        RGB {
            bindings = <
&rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_BRI                 &rgb_ug RGB_BRD  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &to 0
&rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_COLOR_HSB(0,0,100)  &trans           &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans           &trans           &trans           &trans           &trans                          &trans                           &trans  &trans  &trans  &trans  &trans  &trans
                                                   &trans           &trans                          &trans                           &trans  &to 1   &trans
            >;

            label = "RGB";
        };
    };
};
